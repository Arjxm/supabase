import { ChevronRight, FolderClosed, FolderOpen } from 'lucide-react'
import { ComponentPropsWithoutRef, forwardRef } from 'react'
import TreeViewPrimitive from 'react-accessible-treeview'
import { cn } from '../../lib/utils'

const TreeView = TreeViewPrimitive

const TreeViewItem = forwardRef<
  HTMLDivElement,
  ComponentPropsWithoutRef<'div'> & {
    /** The level of the item in the tree */
    level: number
    /** Specifies if the item is expanded */
    isExpanded?: boolean
    /** Specifies if the item is a branch */
    isBranch?: boolean
    /** The padding for each level of the item */
    levelPadding?: number
    /** Specifies if the item is selected */
    isSelected?: boolean
    /** The horizontal padding of the item */
    xPadding: number
  }
>(
  (
    {
      level = 1,
      isExpanded = false,
      isBranch = false,
      levelPadding = 56,
      isSelected = false,
      xPadding = 16,
      ...props
    },
    ref
  ) => {
    return (
      <div
        aria-selected={isSelected}
        aria-expanded={isExpanded}
        ref={ref}
        {...props}
        className={cn(
          'relative',
          'transition-colors',
          'flex items-center gap-3',
          'text-sm',
          'cursor-pointer',
          'select-none',
          'text-foreground-light',
          'aria-selected:text-foreground',
          'aria-expanded:bg-control',
          'aria-selected:!bg-selection',
          'group',
          'h-[28px]',
          'hover:bg-control'
        )}
        style={{
          paddingLeft:
            level === 1 && !isBranch
              ? xPadding + levelPadding / 2 - 2
              : level
                ? levelPadding * (level - 1) + xPadding + (!isBranch ? 0 : 0)
                : levelPadding,
          ...props.style,
        }}
        data-treeview-is-branch={isBranch}
        data-treeview-level={level}
      >
        {level && level > 1 && (
          <div
            style={{
              left: (levelPadding / 2 + 4) * (level - 1) + xPadding,
            }}
            className={
              'absolute h-full w-px group-data-[treeview-is-branch=false]:bg-border-strong'
            }
          ></div>
        )}
        <div className="absolute left-0 h-full w-0.5 group-aria-selected:bg-foreground"></div>
        {isBranch ? (
          <>
            <ChevronRight
              className={cn(
                'text-foreground-muted',
                'group-aria-selected:text-foreground-light',
                'group-aria-expanded:text-foreground-light',
                'transition-transform duration-200',
                'group-aria-expanded:rotate-90'
              )}
              size={14}
            />
            <TreeViewFolderIcon
              className={cn(
                'transition-colors',
                ' text-foreground-muted',
                'group-aria-selected:text-foreground-light',
                'group-aria-expanded:text-foreground-light'
              )}
              isOpen={isExpanded}
              size={16}
              strokeWidth={1.5}
            />
          </>
        ) : (
          <SQL_ICON
            className={cn(
              'transition-colors',
              'fill-foreground-muted',
              'group-aria-selected:fill-foreground',
              'w-5 h-5',
              '-ml-0.5'
            )}
            size={16}
            strokeWidth={1.5}
          />
        )}
        {props.children}
      </div>
    )
  }
)

const SQL_ICON = forwardRef<SVGSVGElement, LucideSVGProps>((props, ref) => (
  <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <g clip-path="url(#clip0_1018_49117)">
      <path d="M20.8457 14.4531V15.6348H17.8916V14.4531H20.8457ZM18.3311 8.52539V15.6348H16.9004V8.52539H18.3311Z" />
      <path d="M13.6865 14.5508L15.3857 16.084L14.4873 16.9092L12.8271 15.376L13.6865 14.5508ZM15.3564 11.5283V12.6318C15.3564 13.1429 15.2962 13.5938 15.1758 13.9844C15.0553 14.3717 14.8812 14.6956 14.6533 14.9561C14.4255 15.2132 14.1553 15.4069 13.8428 15.5371C13.5303 15.6673 13.1836 15.7324 12.8027 15.7324C12.4219 15.7324 12.0736 15.6673 11.7578 15.5371C11.4453 15.4069 11.1751 15.2132 10.9473 14.9561C10.7227 14.6956 10.5469 14.3717 10.4199 13.9844C10.2962 13.5938 10.2344 13.1429 10.2344 12.6318V11.5283C10.2344 11.0173 10.2962 10.568 10.4199 10.1807C10.5436 9.79329 10.7178 9.47103 10.9424 9.21387C11.1702 8.95345 11.4404 8.75814 11.7529 8.62793C12.0654 8.49447 12.4121 8.42773 12.793 8.42773C13.1771 8.42773 13.5254 8.49447 13.8379 8.62793C14.1504 8.75814 14.4206 8.95345 14.6484 9.21387C14.8796 9.47103 15.0553 9.79329 15.1758 10.1807C15.2962 10.568 15.3564 11.0173 15.3564 11.5283ZM13.9307 12.6318V11.5186C13.9307 11.1833 13.9062 10.8952 13.8574 10.6543C13.8086 10.4134 13.7354 10.2165 13.6377 10.0635C13.5433 9.91048 13.4245 9.79818 13.2812 9.72656C13.1413 9.65495 12.9785 9.61914 12.793 9.61914C12.6107 9.61914 12.4479 9.65495 12.3047 9.72656C12.1647 9.79818 12.0475 9.91048 11.9531 10.0635C11.8587 10.2165 11.7855 10.4134 11.7334 10.6543C11.6846 10.8952 11.6602 11.1833 11.6602 11.5186V12.6318C11.6602 12.9704 11.6846 13.2601 11.7334 13.501C11.7822 13.7419 11.8538 13.9404 11.9482 14.0967C12.0459 14.2497 12.1647 14.3636 12.3047 14.4385C12.4479 14.5101 12.6139 14.5459 12.8027 14.5459C12.985 14.5459 13.1462 14.5101 13.2861 14.4385C13.4294 14.3636 13.5482 14.2497 13.6426 14.0967C13.7402 13.9437 13.8118 13.7467 13.8574 13.5059C13.9062 13.2617 13.9307 12.9704 13.9307 12.6318Z" />
      <path d="M7.47266 13.7646C7.47266 13.6377 7.46126 13.5221 7.43848 13.418C7.41569 13.3138 7.36686 13.2178 7.29199 13.1299C7.22038 13.042 7.11458 12.9541 6.97461 12.8662C6.83789 12.7783 6.65885 12.6872 6.4375 12.5928C6.17383 12.4821 5.91829 12.3649 5.6709 12.2412C5.4235 12.1143 5.20052 11.9678 5.00195 11.8018C4.80339 11.6357 4.64551 11.4404 4.52832 11.2158C4.41439 10.988 4.35742 10.721 4.35742 10.415C4.35742 10.1156 4.41113 9.84375 4.51855 9.59961C4.62923 9.35547 4.78548 9.14714 4.9873 8.97461C5.18913 8.79883 5.42513 8.66374 5.69531 8.56934C5.96875 8.47493 6.27311 8.42773 6.6084 8.42773C7.06413 8.42773 7.45801 8.52214 7.79004 8.71094C8.12533 8.89974 8.38411 9.15853 8.56641 9.4873C8.75195 9.81608 8.84473 10.1937 8.84473 10.6201H7.41895C7.41895 10.4183 7.38965 10.2409 7.33105 10.0879C7.27572 9.93164 7.1862 9.80957 7.0625 9.72168C6.9388 9.63379 6.7793 9.58984 6.58398 9.58984C6.40169 9.58984 6.25033 9.62728 6.12988 9.70215C6.0127 9.77376 5.9248 9.87305 5.86621 10C5.81087 10.1237 5.7832 10.2637 5.7832 10.4199C5.7832 10.5371 5.81087 10.6429 5.86621 10.7373C5.9248 10.8285 6.00456 10.9115 6.10547 10.9863C6.20638 11.0579 6.3252 11.1279 6.46191 11.1963C6.60189 11.2646 6.75488 11.3314 6.9209 11.3965C7.24316 11.5234 7.52799 11.6634 7.77539 11.8164C8.02279 11.9661 8.22949 12.1354 8.39551 12.3242C8.56152 12.5098 8.68685 12.7197 8.77148 12.9541C8.85612 13.1885 8.89844 13.4554 8.89844 13.7549C8.89844 14.0511 8.84635 14.3213 8.74219 14.5654C8.64128 14.8063 8.49316 15.0146 8.29785 15.1904C8.10254 15.363 7.86654 15.4964 7.58984 15.5908C7.31641 15.6852 7.01042 15.7324 6.67188 15.7324C6.3431 15.7324 6.03223 15.6868 5.73926 15.5957C5.44629 15.5013 5.1875 15.3597 4.96289 15.1709C4.74154 14.9788 4.56738 14.7363 4.44043 14.4434C4.31348 14.1471 4.25 13.7972 4.25 13.3936H5.68066C5.68066 13.6084 5.70182 13.7923 5.74414 13.9453C5.78646 14.0951 5.85156 14.2155 5.93945 14.3066C6.02734 14.3945 6.13477 14.4613 6.26172 14.5068C6.39193 14.5492 6.54004 14.5703 6.70605 14.5703C6.89486 14.5703 7.0446 14.5345 7.15527 14.4629C7.26921 14.3913 7.35059 14.2952 7.39941 14.1748C7.44824 14.0544 7.47266 13.9176 7.47266 13.7646Z" />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M20.5 5.73438H4.5C3.11929 5.73438 2 6.85366 2 8.23438V16.5039C2 17.8846 3.11929 19.0039 4.5 19.0039H20.5C21.8807 19.0039 23 17.8846 23 16.5039V8.23438C23 6.85366 21.8807 5.73438 20.5 5.73438ZM4.5 4.23438C2.29086 4.23438 0.5 6.02524 0.5 8.23438V16.5039C0.5 18.713 2.29086 20.5039 4.5 20.5039H20.5C22.7091 20.5039 24.5 18.713 24.5 16.5039V8.23438C24.5 6.02524 22.7091 4.23438 20.5 4.23438H4.5Z"
      />
    </g>
    <defs>
      <clipPath id="clip0_1018_49117">
        <rect width="24" height="24" transform="translate(0.5 0.269531)" />
      </clipPath>
    </defs>
  </svg>
))

const JS_ICON = forwardRef<SVGSVGElement, LucideSVGProps>((props, ref) => (
  <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
    <path d="M15.5859 13.7646C15.5859 13.6377 15.5745 13.5221 15.5518 13.418C15.529 13.3138 15.4801 13.2178 15.4053 13.1299C15.3337 13.042 15.2279 12.9541 15.0879 12.8662C14.9512 12.7783 14.7721 12.6872 14.5508 12.5928C14.2871 12.4821 14.0316 12.3649 13.7842 12.2412C13.5368 12.1143 13.3138 11.9678 13.1152 11.8018C12.9167 11.6357 12.7588 11.4404 12.6416 11.2158C12.5277 10.988 12.4707 10.721 12.4707 10.415C12.4707 10.1156 12.5244 9.84375 12.6318 9.59961C12.7425 9.35547 12.8988 9.14714 13.1006 8.97461C13.3024 8.79883 13.5384 8.66374 13.8086 8.56934C14.082 8.47493 14.3864 8.42773 14.7217 8.42773C15.1774 8.42773 15.5713 8.52214 15.9033 8.71094C16.2386 8.89974 16.4974 9.15853 16.6797 9.4873C16.8652 9.81608 16.958 10.1937 16.958 10.6201H15.5322C15.5322 10.4183 15.5029 10.2409 15.4443 10.0879C15.389 9.93164 15.2995 9.80957 15.1758 9.72168C15.0521 9.63379 14.8926 9.58984 14.6973 9.58984C14.515 9.58984 14.3636 9.62728 14.2432 9.70215C14.126 9.77376 14.0381 9.87305 13.9795 10C13.9242 10.1237 13.8965 10.2637 13.8965 10.4199C13.8965 10.5371 13.9242 10.6429 13.9795 10.7373C14.0381 10.8285 14.1178 10.9115 14.2188 10.9863C14.3197 11.0579 14.4385 11.1279 14.5752 11.1963C14.7152 11.2646 14.8682 11.3314 15.0342 11.3965C15.3564 11.5234 15.6413 11.6634 15.8887 11.8164C16.1361 11.9661 16.3428 12.1354 16.5088 12.3242C16.6748 12.5098 16.8001 12.7197 16.8848 12.9541C16.9694 13.1885 17.0117 13.4554 17.0117 13.7549C17.0117 14.0511 16.9596 14.3213 16.8555 14.5654C16.7546 14.8063 16.6064 15.0146 16.4111 15.1904C16.2158 15.363 15.9798 15.4964 15.7031 15.5908C15.4297 15.6852 15.1237 15.7324 14.7852 15.7324C14.4564 15.7324 14.1455 15.6868 13.8525 15.5957C13.5596 15.5013 13.3008 15.3597 13.0762 15.1709C12.8548 14.9788 12.6807 14.7363 12.5537 14.4434C12.4268 14.1471 12.3633 13.7972 12.3633 13.3936H13.7939C13.7939 13.6084 13.8151 13.7923 13.8574 13.9453C13.8997 14.0951 13.9648 14.2155 14.0527 14.3066C14.1406 14.3945 14.248 14.4613 14.375 14.5068C14.5052 14.5492 14.6533 14.5703 14.8193 14.5703C15.0081 14.5703 15.1579 14.5345 15.2686 14.4629C15.3825 14.3913 15.4639 14.2952 15.5127 14.1748C15.5615 14.0544 15.5859 13.9176 15.5859 13.7646Z" />
    <path d="M9.51465 13.4424V8.52539H10.9404V13.4473C10.9404 13.9193 10.8493 14.3278 10.667 14.6729C10.488 15.0146 10.2438 15.2767 9.93457 15.459C9.62533 15.6413 9.27702 15.7324 8.88965 15.7324C8.49251 15.7324 8.1377 15.6543 7.8252 15.498C7.51595 15.3385 7.27181 15.0977 7.09277 14.7754C6.91374 14.4499 6.82422 14.0365 6.82422 13.5352H8.25977C8.25977 13.7891 8.28581 13.9893 8.33789 14.1357C8.38997 14.2822 8.46322 14.388 8.55762 14.4531C8.65527 14.5182 8.76595 14.5508 8.88965 14.5508C9.02311 14.5508 9.13542 14.5068 9.22656 14.4189C9.32096 14.3311 9.39258 14.2057 9.44141 14.043C9.49023 13.877 9.51465 13.6768 9.51465 13.4424Z" />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M16.5 5.73438H7.5C6.11929 5.73438 5 6.85366 5 8.23438V16.5039C5 17.8846 6.11929 19.0039 7.5 19.0039H16.5C17.8807 19.0039 19 17.8846 19 16.5039V8.23438C19 6.85366 17.8807 5.73438 16.5 5.73438ZM7.5 4.23438C5.29086 4.23438 3.5 6.02524 3.5 8.23438V16.5039C3.5 18.713 5.29086 20.5039 7.5 20.5039H16.5C18.7091 20.5039 20.5 18.713 20.5 16.5039V8.23438C20.5 6.02524 18.7091 4.23438 16.5 4.23438H7.5Z"
    />
  </svg>
))

// Define a custom type for SVG components including the size prop
interface LucideSVGProps extends Omit<React.SVGProps<SVGSVGElement>, 'ref'> {
  size?: number
}

const TreeViewFolderIcon = forwardRef<SVGSVGElement, LucideSVGProps & { isOpen?: boolean }>(
  ({ isOpen, ...props }, ref) => {
    const Icon = isOpen ? FolderOpen : FolderClosed

    return <Icon ref={ref} {...props} />
  }
)

export { TreeView, TreeViewFolderIcon, TreeViewItem }
